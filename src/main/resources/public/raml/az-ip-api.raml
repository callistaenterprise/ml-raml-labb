#%RAML 0.8
title: AZ IP API
version: v0.2
#baseUri: /api
baseUri: https://localhost:8080/api
securitySchemes:
  - basic:
      type: Basic Authentication
securedBy: [basic]

schemas:
  - study:    !include study/study.schema
  - studies:  !include study/studies.schema
  - doctor:   !include doctor/doctor.schema
  - doctors:  !include doctor/doctors.schema
  - patient:  !include patient/patient.schema
  - patients: !include patient/patients.schema
  - error:    !include common/error.schema
  - id: |
      {
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "id": "http://jsonschema.net",
        "required":false,
        "properties": {
          "id": {
            "type": "string",
            "required":true
          }
        }
      }
  - ids: |
      {
          "type": "array",
          "$schema": "http://json-schema.org/draft-03/schema",
          "description": "a collection of id-refs",
          "items": {
              "$ref": "id"
          }
      }

resourceTypes:
  - readOnlyCollection: !include common/resourceTypes/readOnlyCollection.raml
  - collection:         !include common/resourceTypes/collection.raml
  - collectionItem:     !include common/resourceTypes/collectionItem.raml

traits:
  - searchable: !include common/traits/searchable.raml
  - orderable:  !include common/traits/orderable.raml
  - pageable:   !include common/traits/pageable.raml

/coutries:

/studies:
  type:
    collection:
      exampleCollection: !include study/studies.sample
      exampleItem: !include study/study-new.sample
  get:
    is: [
          orderable: {fieldsList: "name"},
          pageable
        ]
    queryParameters:
      name:
        description: "Search by name"
        example: study-1
        required: false
        type: string
  /{studyId}:
    type:
      collectionItem:
        exampleItem: !include study/study-retrieve.sample

    /assignedDoctors:
      post:
        description: |
          Add a ref to a doctor that is assigned to this study
        body:
          application/json:
            schema: id
            example: |
              { "id" : "1234567890" }
        responses:
          # OK
          200:

          # Duplicate error
          409:
            body:
              application/json:
                schema: error
      get:
        description: Get a ref to each doctor that is assigned to this study
        responses:
          200:
            body:
              application/json:
                schema: ids
                example: |
                  [{ "id" : "1234567890" }, { "id" : "1234567891" }, { "id" : "1234567892" }]
      /{doctorId}:
        delete:
          description: |
            Deletes an ref to a doctor, i.e. the doctor is no longer assigned to the study
          body:
          responses:
            200:

/applications:
/sensors:

/doctors:
  type:
    collection:
      exampleCollection: !include doctor/doctors.sample
      exampleItem: !include doctor/doctor-new.sample
  get:
    is: [
          orderable: {fieldsList: "username, firstName, lastName"},
          pageable
        ]
    queryParameters:
      username:
        description: "Search by username"
        example: D11
        required: false
        type: string
  /{doctorId}:
    type:
      collectionItem:
        exampleItem: !include doctor/doctor-retrieve.sample

    /assignedInStudies:
      get:
        responses:
          200:
            body:
              application/json:
                schema: ids
                example: |
                  [{ "id" : "1234567890" }, { "id" : "1234567891" }, { "id" : "1234567892" }]
      /{studyId}:
        post:
          description: |
            Add a ref to a patient that is assigned by this doctor to this study
          body:
            application/json:
              schema: id
              example: |
                { "id" : "1234567890" }
          responses:
            # OK
            200:

            # Duplicate error
            409:
              body:
                application/json:
                  schema: error
        get:
          description: Get a ref to each patient that this doctor have assigned to this study
          responses:
            200:
              body:
                application/json:
                  schema: ids
                  example: |
                    [{ "id" : "1234567890" }, { "id" : "1234567891" }, { "id" : "1234567892" }]
        /{patientId}:
          delete:
            description: |
              Deletes an ref to a patient, i.e. the patient is no longer assigned to the study by this doctor
            body:
            responses:
              200:

/patients:
  type:
    collection:
      exampleCollection: !include patient/patients.sample
      exampleItem: !include patient/patient-new.sample
  get:
    is: [
          orderable: {fieldsList: "username, firstName, lastName"},
          pageable
        ]
    queryParameters:
      username:
        description: "Search by username"
        example: U11
        required: false
        type: string
  /{patientId}:
    type:
      collectionItem:
        exampleItem: !include patient/patient-retrieve.sample

/carers:
  post:
    body:
      application/json:
        example: |
          {
            "username": "u1",
            "patientID": "1",
            "firstname": "f1",
            "lastname": "l1",
            "weight": "100",
            "height": "200"
          }
    responses:
      200:
      500:
        body:
          application/json:
            example: |
              {
                "errorMessage": "The patient couldn't be created."
              }
  get:
    responses:
      200:
        body:
          application/json:
            example: |
              [
                {
                  "username": "u1",
                  "patientID": "1",
                  "firstname": "f1",
                  "lastname": "l1",
                  "weight": "101",
                  "height": "201"
                },
                {
                  "username": "u2",
                  "patientID": "2",
                  "firstname": "f2",
                  "lastname": "l2",
                  "weight": "102",
                  "height": "202"
                }
              ]
